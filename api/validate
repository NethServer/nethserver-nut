#!/usr/bin/php
<?php
/*
 * Copyright (C) 2018 Nethesis S.r.l.
 * http://www.nethesis.it - nethserver@nethesis.it
 *
 * This script is part of NethServer.
 *
 * NethServer is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License,
 * or any later version.
 *
 * NethServer is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with NethServer.  If not, see COPYING.
*/

require_once("/usr/libexec/nethserver/api/lib/Helpers.php");

$data = readInput();

$nut_server_validator = new LegacyValidator($data['configuration']['nut_server']['props']);
$devices = array('auto','/dev/ttyS0','/dev/ttyS1','/dev/ttyS2','/dev/ttyUSB0','/dev/ttyUSB1');
$validator = new Validator();

// "status": "disabled",
// "access": "green",
// "User": "upsmon",
// "TCPPort": "3493",
// "Device": "auto",
// "Model": "usbhid-ups",
// "Password": "790793219561846",
// "Ups": "UPS"

$nut_server_validator->declareParameter('status', Validate::SERVICESTATUS);
$nut_server_validator->declareParameter('access', Validate::NOTEMPTY);
$nut_server_validator->declareParameter('User', Validate::USERNAME);
$nut_server_validator->declareParameter('TCPPort', Validate::PORTNUMBER);
$nut_server_validator->declareParameter('Device', $validator->memberOf($devices));
$nut_server_validator->declareParameter('Model', Validate::NOTEMPTY);
$nut_server_validator->declareParameter('Password', Validate::NOTEMPTY);
$nut_server_validator->declareParameter('Ups', Validate::NOTEMPTY);

$nut_monitor_validator = new LegacyValidator($data['configuration']['nut_monitor']['props']);

// "status": "disabled",
// "Master": "",
// "Notify": "disabled"

$nut_monitor_validator->declareParameter('status', Validate::SERVICESTATUS);
$nut_monitor_validator->declareParameter('Master', Validate::ANYTHING);
$nut_monitor_validator->declareParameter('Notify', Validate::SERVICESTATUS);

# Validate the input

if (!$nut_server_validator->validate()) {
    error($nut_server_validator);
}

if (!$nut_monitor_validator->validate()) {
    error($nut_monitor_validator);
}

success();
